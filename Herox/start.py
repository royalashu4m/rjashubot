from datetime import datetime
from sys import version_info
from time import time

from config import (
    ALIVE_IMG,
    ALIVE_NAME,
    BOT_NAME,
    BOT_USERNAME,
    GROUP_SUPPORT,
    OWNER_NAME,
    UPDATES_CHANNEL,
    OWNER_NAME,
    START_PIC,
)
from SJM.decorators import sudo_users_only
from SJM.filters import command
from pyrogram import Client, filters
from pyrogram import __version__ as pyrover
from pyrogram.types import InlineKeyboardButton, InlineKeyboardMarkup, Message

__major__ = 0
__minor__ = 2
__micro__ = 1

__python_version__ = f"{version_info[0]}.{version_info[1]}.{version_info[2]}"


START_TIME = datetime.utcnow()
START_TIME_ISO = START_TIME.replace(microsecond=0).isoformat()
TIME_DURATION_UNITS = (
    ("week", 60 * 60 * 24 * 7),
    ("day", 60 * 60 * 24),
    ("hour", 60 * 60),
    ("min", 60),
    ("sec", 1),
)


async def _human_time_duration(seconds):
    if seconds == 0:
        return "inf"
    parts = []
    for unit, div in TIME_DURATION_UNITS:
        amount, seconds = divmod(int(seconds), div)
        if amount > 0:
            parts.append("{} {}{}".format(amount, unit, "" if amount == 1 else "s"))
    return ", ".join(parts)


@Client.on_message(
    command(["start", f"start@{BOT_USERNAME}"]) & filters.private & ~filters.edited
)
async def start_private(client: Client, message: Message):
    await message.reply_text(
        f""" ú·¥á ü ü·¥è [‚ú®]({START_PIC}) **·¥°·¥á ü·¥Ñ·¥è·¥ç·¥á {message.from_user.mention()} !**\n
 **…™ ·¥Ñ·¥Ä…¥ ·¥ò ü·¥Ä è ·¥ç·¥ús…™·¥Ñ …™…¥ …¢ Ä·¥è·¥ú·¥ò ·¥†…™·¥Ö·¥á·¥è ·¥Ñ·¥Ä ü ü !!**
 **·¥ä·¥ús·¥õ ·¥Ä·¥Ö·¥Ö ·¥ç·¥á …™…¥  è·¥è·¥ú Ä …¢ Ä·¥è·¥ú·¥ò ·¥Ä…¥·¥Ö ·¥ò Ä·¥è·¥ç·¥è·¥õ·¥á üí´**
 **“ì·¥è Ä ·¥Ä…¥ è  ú·¥á ü·¥ò ·¥ä·¥è…™…¥ @LittelStar_org**""",
        reply_markup=InlineKeyboardMarkup(
            [
                [
                    InlineKeyboardButton(
                        "‚õì A·¥Ö·¥Ö ·¥ç·¥á …™…¥  è·¥è·¥ú Ä G Ä·¥è·¥ú·¥ò",
                        url=f"https://t.me/{BOT_USERNAME}?startgroup=true",
                    )
                ],
                [InlineKeyboardButton("‚Ä¢ C·¥è·¥ç·¥ç·¥Ä…¥·¥Ös ",  callback_data="cb_cmd"),],
                [
                    InlineKeyboardButton(
                    "‚Ä¢ O·¥°…¥·¥á Ä ", 
                    url=f"https://t.me/{OWNER_NAME}"),
                    InlineKeyboardButton("‚Ä¢ D·¥á·¥†·¥á ü·¥è·¥ò·¥á Ä ", url=f"https://t.me/LittelStar_org"),
                ],
                [
                    InlineKeyboardButton(
                        "‚Ä¢ S·¥ú·¥ò·¥ò·¥è Ä·¥õ ", url=f"https://t.me/{GROUP_SUPPORT}"
                    ),
                    InlineKeyboardButton(
                        "‚Ä¢ U·¥ò·¥Ö·¥Ä·¥õ·¥ás", url=f"https://t.me/{UPDATES_CHANNEL}"
                    ),
                ],
                [
                    InlineKeyboardButton(
                        "‚Ä¢ S·¥è·¥ú Ä·¥Ñ·¥á C·¥è·¥Ö·¥á ‚Ä¢", url="https://github.com/royalashu4m/rjashubot"
                    )
                ],
            ]
        ),
    )


@Client.on_message(
    command(["start", f"start@{BOT_USERNAME}"]) & filters.group & ~filters.edited
)
async def start_group(client: Client, message: Message):
    current_time = datetime.utcnow()
    uptime_sec = (current_time - START_TIME).total_seconds()
    uptime = await _human_time_duration(int(uptime_sec))

    keyboard = InlineKeyboardMarkup(
        [
            [
                InlineKeyboardButton("‚Ä¢ S·¥ú·¥ò·¥ò·¥è Ä·¥õ", url=f"https://t.me/{GROUP_SUPPORT}"),
                InlineKeyboardButton(
                    "‚Ä¢ U·¥ò·¥Ö·¥Ä·¥õ·¥ás", url=f"https://t.me/{UPDATES_CHANNEL}"
                ),
            ]
        ]
    )

    alive = f"**Hello {message.from_user.mention()}, i'm {BOT_NAME}**\n\n‚ú® Bot is working normally\nüçÄ My Master: [{ALIVE_NAME}](https://t.me/{OWNER_NAME})\nüçÄ Pyrogram Version: `{pyrover}`\n‚ú® Python Version: `{__python_version__}`\nüçÄ Uptime Status: `{uptime}`\n\n**Thanks for Adding me here, for playing music on your Group voice chat** ‚ù§"

    await message.reply_photo(
        photo=f"{ALIVE_IMG}",
        caption=alive,
        reply_markup=keyboard,
    )


@Client.on_message(
    command(["help", f"help@{BOT_USERNAME}"]) & filters.group & ~filters.edited
)
async def help(client: Client, message: Message):
    await message.reply_text(
        f"""‚ú® **H·¥á ü ü·¥è** {message.from_user.mention()} !
¬ª **·¥ò Ä·¥áss ·¥õ ú·¥á  ô·¥ú·¥õ·¥õ·¥è…¥  ô·¥á ü·¥è·¥° ·¥õ·¥è  Ä·¥á·¥Ä·¥Ö ·¥õ ú·¥á ·¥áx·¥ò ü·¥Ä…¥·¥Ä·¥õ…™·¥è…¥ ·¥Ä…¥·¥Ö s·¥á·¥á ·¥õ ú·¥á  ü…™s·¥õ ·¥è“ì ·¥Ä·¥†·¥Ä…™ ü·¥Ä ô ü·¥á ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ös !**
‚ö° __Powered by {BOT_NAME} A.I__""",
        reply_markup=InlineKeyboardMarkup(
            [[InlineKeyboardButton(text="‚Ä¢ H·¥á ü·¥ò", callback_data="cbcmd")]]
        ),
    )


@Client.on_message(command(["ping", f"ping@{BOT_USERNAME}"]) & ~filters.edited)
async def ping_pong(client: Client, message: Message):
    start = time()
    m_reply = await message.reply_text("pinging...")
    delta_ping = time() - start
    await message.reply_photo(
        photo="https://telegra.ph/file/2c1035f056f495a59e1c6.jpg",
        caption=f"""<b>üèì ·¥©·¥è…¥…¢ #ùóõùó≤ùóøùóºùòÖ_ùó†ùòÇùòÄùó∂ùó∞ !</b>\n   `{delta_ping * 1000:.3f} ·¥çs`""",
        reply_markup=InlineKeyboardMarkup(
            [
                [
                    InlineKeyboardButton(
                        "‚Ä¢ S·¥ú·¥ò·¥ò·¥è Ä·¥õ ", url=f"https://t.me/{GROUP_SUPPORT}"
                    ),
                    InlineKeyboardButton(
                        "‚Ä¢ D·¥á·¥†·¥á ü·¥è·¥ò·¥á Ä ", url="https://t.me/herox_xd"
                    )
                ],[ 
                    InlineKeyboardButton(
                        "‚õì A·¥Ö·¥Ö ·¥ç·¥á …™…¥  è·¥è·¥ú Ä G Ä·¥è·¥ú·¥ò", url=f"https://t.me/{BOT_USERNAME}?startgroup=true"
                    )]
            ]
        ),
    )


@Client.on_message(command(["uptime", f"uptime@{BOT_USERNAME}"]) & ~filters.edited)
@sudo_users_only
async def get_uptime(client: Client, message: Message):
    current_time = datetime.utcnow()
    uptime_sec = (current_time - START_TIME).total_seconds()
    uptime = await _human_time_duration(int(uptime_sec))
    await message.reply_text(
        "ü§ñ bot status:\n"
        f"‚Ä¢ **uptime:** `{uptime}`\n"
        f"‚Ä¢ **start time:** `{START_TIME_ISO}`"
    )
